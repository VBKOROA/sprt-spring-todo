plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'indiv.abko'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// openfeign-querydsl 버전 변수
def querydslVersion = "7.0"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 해시 암호화를 위한 의존성
	implementation 'org.mindrot:jbcrypt:0.4'

	// MapStruct를 위한 의존성
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	// 롬복을 사용하므로 추가
	// 롬복과 MapStruct 둘 다 컴파일 과정 중에 동작하므로
	// 충돌을 줄이기 위해 밑의 의존성을 사용
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// io.github.openfeign.querydsl 추가
	implementation "io.github.openfeign.querydsl:querydsl-jpa:${querydslVersion}"
	implementation "io.github.openfeign.querydsl:querydsl-core:${querydslVersion}"
	annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:${querydslVersion}:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 추가: Q-Type 빌드 디렉토리 지정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}
